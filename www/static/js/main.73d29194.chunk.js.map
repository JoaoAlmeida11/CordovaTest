{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","images","setImages","className","multiple","value","onChange","imageList","addUpdateIndex","console","log","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","style","color","undefined","onClick","map","image","index","src","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","window","cordova","addEventListener","renderReactDom"],"mappings":"mRA8DeA,MAxDf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,KAUb,OACE,sBAAKC,UAAU,MAAf,UACE,oCACA,cAAC,IAAD,CACEC,UAAQ,EACRC,MAAOJ,EACPK,SAZW,SAACC,EAAWC,GAE3BC,QAAQC,IAAIH,EAAWC,GACvBN,EAAUK,IAUNI,UAfY,GAgBZC,WAAW,WALb,SAOG,gBACCL,EADD,EACCA,UACAM,EAFD,EAECA,cACAC,EAHD,EAGCA,iBACAC,EAJD,EAICA,cACAC,EALD,EAKCA,cACAC,EAND,EAMCA,WACAC,EAPD,EAOCA,UAPD,OAUC,cADA,CACA,OAAKf,UAAU,wBAAf,UACE,gDACEgB,MAAOF,EAAa,CAAEG,MAAO,YAAUC,EACvCC,QAAST,GACLK,GAHN,qCADF,OASE,wBAAQI,QAASR,EAAjB,+BACCP,EAAUgB,KAAI,SAACC,EAAOC,GAAR,OACb,sBAAiBtB,UAAU,aAA3B,UACE,qBAAKuB,IAAKF,EAAK,SAAcG,IAAI,GAAGC,MAAM,QAC1C,sBAAKzB,UAAU,0BAAf,UACE,wBAAQmB,QAAS,kBAAMP,EAAcU,IAArC,oBACA,wBAAQH,QAAS,kBAAMN,EAAcS,IAArC,yBAJMA,gBCnCTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAGtBC,OAAOC,QACTH,SAASI,iBAAiB,eAAe,WACvCC,oBACC,GAEHA,iBAMFjB,M","file":"static/js/main.73d29194.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport ImageUploading from 'react-images-uploading';\n\n\nfunction App() {\n  const [images, setImages] = React.useState([]);\n  const maxNumber = 69;\n \n  const onChange = (imageList, addUpdateIndex) => {\n    // data for submit\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList);\n  };\n \n  return (\n    <div className=\"App\">\n      <h1>HI</h1>\n      <ImageUploading\n        multiple\n        value={images}\n        onChange={onChange}\n        maxNumber={maxNumber}\n        dataURLKey=\"data_url\"\n      >\n        {({\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps,\n        }) => (\n          // write your building UI\n          <div className=\"upload__image-wrapper\">\n            <button\n              style={isDragging ? { color: 'red' } : undefined}\n              onClick={onImageUpload}\n              {...dragProps}\n            >\n              Click or Drop here\n            </button>\n            &nbsp;\n            <button onClick={onImageRemoveAll}>Remove all images</button>\n            {imageList.map((image, index) => (\n              <div key={index} className=\"image-item\">\n                <img src={image['data_url']} alt=\"\" width=\"100\" />\n                <div className=\"image-item__btn-wrapper\">\n                  <button onClick={() => onImageUpdate(index)}>Update</button>\n                  <button onClick={() => onImageRemove(index)}>Remove</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </ImageUploading>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}